name: Dependency Updates

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch: # Allow manual trigger

jobs:
  update-dependencies:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        
    - name: Check for dependency updates
      id: check-updates
      run: |
        npm outdated --json > outdated.json || true
        
        if [ -s outdated.json ]; then
          echo "updates-available=true" >> $GITHUB_OUTPUT
          echo "📦 Dependencies with available updates:"
          npm outdated
        else
          echo "updates-available=false" >> $GITHUB_OUTPUT
          echo "✅ All dependencies are up to date"
        fi
        
    - name: Update dependencies
      if: steps.check-updates.outputs.updates-available == 'true'
      run: |
        # Update dependencies
        npm update
        
        # Update dev dependencies
        npm update --save-dev
        
    - name: Run tests after updates
      if: steps.check-updates.outputs.updates-available == 'true'
      run: |
        npm ci
        npm run test:ci
        
    - name: Verify 100% coverage maintained
      if: steps.check-updates.outputs.updates-available == 'true'
      run: |
        coverage=$(npm run test:coverage --silent | grep -o "Functions.*[0-9.]*%" | grep -o "[0-9.]*" | head -1)
        if (( $(echo "$coverage < 100" | bc -l) )); then
          echo "❌ Dependency updates broke test coverage (now $coverage%)"
          exit 1
        fi
        echo "✅ Test coverage maintained at $coverage%"
        
    - name: Check for security vulnerabilities
      if: steps.check-updates.outputs.updates-available == 'true'
      run: npm audit --audit-level=moderate
      
    - name: Create Pull Request
      if: steps.check-updates.outputs.updates-available == 'true'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore: update dependencies to latest versions'
        title: '🔄 Automated Dependency Updates'
        body: |
          ## Automated Dependency Updates
          
          This PR contains automated dependency updates generated by our weekly maintenance workflow.
          
          ### Changes
          - 📦 Updated npm dependencies to latest compatible versions
          - ✅ All tests pass with updated dependencies  
          - 🔒 Security audit passed
          - 📊 100% test coverage maintained
          
          ### Verification
          - [ ] All automated checks passed
          - [ ] Manual testing completed (if needed)
          - [ ] No breaking changes introduced
          
          ### Notes
          This PR was automatically created by our dependency update workflow. Please review the changes and merge if everything looks good.
          
          **Generated on**: $(date)
        branch: automated/dependency-updates
        labels: |
          dependencies
          automated
          maintenance
        reviewers: mr-cto
        
  security-audit:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v5
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      id: audit
      run: |
        npm audit --json > audit-results.json || true
        
        # Check if there are any vulnerabilities
        vulnerabilities=$(cat audit-results.json | jq '.metadata.vulnerabilities.total // 0')
        
        if [ $vulnerabilities -gt 0 ]; then
          echo "vulnerabilities-found=true" >> $GITHUB_OUTPUT
          echo "vulnerability-count=$vulnerabilities" >> $GITHUB_OUTPUT
        else
          echo "vulnerabilities-found=false" >> $GITHUB_OUTPUT
        fi
        
    - name: Create security issue
      if: steps.audit.outputs.vulnerabilities-found == 'true'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const auditResults = JSON.parse(fs.readFileSync('audit-results.json', 'utf8'));
          const vulnerabilityCount = '${{ steps.audit.outputs.vulnerability-count }}';
          
          let issueBody = `## 🚨 Security Vulnerabilities Detected
          
          Our automated security scan found **${vulnerabilityCount}** vulnerabilities in our dependencies.
          
          ### Summary
          `;
          
          if (auditResults.advisories) {
            for (const [id, advisory] of Object.entries(auditResults.advisories)) {
              issueBody += `
          - **${advisory.title}** (${advisory.severity})
            - Package: \`${advisory.module_name}\`
            - Versions: ${advisory.vulnerable_versions}
            - Recommendation: ${advisory.recommendation}
          `;
            }
          }
          
          issueBody += `
          ### Action Required
          - [ ] Review each vulnerability
          - [ ] Update affected packages
          - [ ] Run tests to ensure compatibility
          - [ ] Verify 100% test coverage maintained
          
          ### Resources
          - Run \`npm audit\` locally for detailed information
          - Use \`npm audit fix\` to automatically fix vulnerabilities
          - Manual review may be required for breaking changes
          
          **Generated on**: ${new Date().toISOString()}
          `;
          
          await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: `🚨 Security Alert: ${vulnerabilityCount} vulnerabilities found`,
            body: issueBody,
            labels: ['security', 'urgent', 'dependencies']
          });